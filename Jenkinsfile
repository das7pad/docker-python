//
// This file is autogenerated.
// To update, run:
//
//  make Jenkinsfile
//

pipeline {
  agent none
  environment {
    HOME = '/tmp/'
  }
  options {
    timestamps()
  }
  stages {
    stage('Prepare Build') {
      agent any
      steps {
        dir('official-images') {
          git url: 'https://github.com/docker-library/official-images'
        }
        stash includes: 'official-images/**', name: 'official-images'
      }
    }
    stage('Build Stage') {
      parallel {
        stage('2.7.16') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:2.7-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('2.7.16 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=2.7.16 \
                      --file 2.7/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('2.7.16 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('2.7.16 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:2'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:2'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:2'
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:2.7'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:2.7'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:2.7'
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:2.7.16'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:2.7.16'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:2.7.16'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.5.3') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.5-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.5.3 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.5.3 \
                      --file 3.5/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.5.3 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.5.3 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.5.3'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.5.3'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.5.3'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.5.4') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.5-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.5.4 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.5.4 \
                      --file 3.5/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.5.4 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.5.4 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.5.4'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.5.4'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.5.4'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.5.5') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.5-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.5.5 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.5.5 \
                      --file 3.5/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.5.5 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.5.5 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.5.5'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.5.5'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.5.5'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.5.6') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.5-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.5.6 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.5.6 \
                      --file 3.5/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.5.6 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.5.6 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.5'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.5'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.5'
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.5.6'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.5.6'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.5.6'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.6.0') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.6-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.6.0 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.6.0 \
                      --file 3.6/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.6.0 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.6.0 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.6.0'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.6.0'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.6.0'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.6.1') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.6-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.6.1 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.6.1 \
                      --file 3.6/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.6.1 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.6.1 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.6.1'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.6.1'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.6.1'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.6.2') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.6-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.6.2 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.6.2 \
                      --file 3.6/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.6.2 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.6.2 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.6.2'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.6.2'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.6.2'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.6.3') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.6-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.6.3 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.6.3 \
                      --file 3.6/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.6.3 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.6.3 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.6.3'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.6.3'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.6.3'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.6.4') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.6-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.6.4 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.6.4 \
                      --file 3.6/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.6.4 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.6.4 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.6.4'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.6.4'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.6.4'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.6.5') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.6-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.6.5 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.6.5 \
                      --file 3.6/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.6.5 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.6.5 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.6.5'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.6.5'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.6.5'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.6.6') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.6-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.6.6 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.6.6 \
                      --file 3.6/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.6.6 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.6.6 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.6.6'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.6.6'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.6.6'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.6.7') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.6-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.6.7 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.6.7 \
                      --file 3.6/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.6.7 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.6.7 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.6.7'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.6.7'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.6.7'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.6.8') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.6-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.6.8 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.6.8 \
                      --file 3.6/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.6.8 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.6.8 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.6'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.6'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.6'
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.6.8'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.6.8'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.6.8'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.7.0') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.7-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.7.0 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.7.0 \
                      --file 3.7/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.7.0 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.7.0 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.7.0'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.7.0'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.7.0'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.7.1') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.7-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.7.1 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.7.1 \
                      --file 3.7/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.7.1 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.7.1 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.7.1'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.7.1'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.7.1'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.7.2') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.7-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.7.2 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.7.2 \
                      --file 3.7/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.7.2 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.7.2 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.7.2'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.7.2'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.7.2'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
        stage('3.7.3') {
          agent {
            label 'docker_builder'
          }
          environment {
            IMAGE = "python:3.7-stretch-$BRANCH_NAME-$BUILD_NUMBER"
          }
          stages {
            stage('3.7.3 Build') {
              steps {
                retry(10) {
                  sh '''docker build --tag $IMAGE \
                      --build-arg PYTHON_VERSION=3.7.3 \
                      --file 3.7/stretch/Dockerfile \
                      .
                  '''
                }
              }
            }
            stage('3.7.3 Test') {
              steps {
                unstash 'official-images'
                retry(3) {
                  sh 'official-images/test/run.sh $IMAGE'
                }
              }
            }
            stage('3.7.3 Push') {
              steps {
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3'
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.7'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.7'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.7'
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:3.7.3'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:3.7.3'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:3.7.3'
                sh 'docker tag $IMAGE $DOCKER_REGISTRY/python:latest'
                retry(3) {
                  sh 'docker push $DOCKER_REGISTRY/python:latest'
                }
                sh 'docker rmi $DOCKER_REGISTRY/python:latest'
              }
            }
          }
          post {
            cleanup {
              sh 'docker rmi --force $IMAGE'
              sh '''test -e official-images/test/clean.sh \
                && official-images/test/clean.sh \
                || true
              '''
            }
          }
        }
      }
    }
  }
}
